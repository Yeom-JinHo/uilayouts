{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "productcard2",
  "type": "registry:component",
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./registry/components/card/product-card2.tsx",
      "content": "'use client';\r\nimport React, { ReactNode, useState } from 'react';\r\nimport Image from 'next/image';\r\nimport {\r\n  CheckIcon,\r\n  ChevronDownIcon,\r\n  ChevronUpIcon,\r\n  Heart,\r\n  ShoppingCart,\r\n} from 'lucide-react';\r\nimport * as Select from '@radix-ui/react-select';\r\nimport { cn } from '@/lib/utils';\r\nimport { motion } from 'motion/react';\r\nimport { CardArr } from '@/components/website/constant';\r\n\r\nfunction Card2() {\r\n  const [selectedImage, setSelectedImage] = useState(CardArr[1].img);\r\n  const [selectedColor, setSelectedColor] = useState(CardArr[1].color);\r\n  const handleColorButtonClick = (img: string, color: string) => {\r\n    setSelectedImage(img);\r\n    setSelectedColor(color);\r\n  };\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setIsActive((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <div className='w-[350px] mx-auto '>\r\n      <div className='dark:bg-white bg-gray-100 rounded-md'>\r\n        <div className='w-full h-52 relative'>\r\n          <motion.button\r\n            className='absolute top-2 right-2 z-20 text-2xl text-white '\r\n            onClick={handleClick}\r\n            animate={{ scale: isActive ? 1.2 : 1 }}\r\n            transition={{ type: 'spring', stiffness: 1000, damping: 10 }}\r\n          >\r\n            {isActive ? (\r\n              <>\r\n                <Heart className=' fill-white' />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Heart />\r\n              </>\r\n            )}\r\n          </motion.button>\r\n          {/* <button className=\"absolute top-2 right-2 z-20\">\r\n            <Heart />\r\n          </button> */}\r\n          {CardArr.map((data, index) => (\r\n            <Image\r\n              src={data?.img}\r\n              alt='shoes'\r\n              width={1000}\r\n              height={1000}\r\n              className={`absolute h-52 w-full rounded-t-md  object-cover  ${\r\n                selectedColor === data.color\r\n                  ? 'z-10 transition-all duration-500'\r\n                  : 'transition-all delay-500'\r\n              }`}\r\n              style={{\r\n                clipPath:\r\n                  selectedColor === data.color\r\n                    ? 'polygon(0 0, 100% 0, 100% 100%, 0% 100%) '\r\n                    : 'polygon(0 100%, 100% 100%, 100% 100%, 0% 100%) ',\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n        <article className='text-black pt-2 p-2'>\r\n          <div className='flex justify-between'>\r\n            <h1 className='font-semibold text-xl text-blue-500'>\r\n              Nike Air Max\r\n            </h1>\r\n            <span className='font-medium text-xl text-blue-500'>$39</span>\r\n          </div>\r\n          <p className='text-xs'>\r\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Tempore\r\n            porro quos quae autem vel praesentium.\r\n          </p>\r\n          <div className='py-1'>\r\n            <p className='text-sm'>Select Size:</p>\r\n            <Select.Root>\r\n              <Select.Trigger\r\n                className='inline-flex items-center justify-center rounded-sm px-[15px] text-[13px] leading-none h-[35px] gap-[5px] dark:bg-white bg-black text-violet11 shadow-[0_2px_10px] shadow-black/10 hover:bg-mauve3 focus:shadow-[0_0_0_2px] focus:shadow-black data-[placeholder]:text-violet9 outline-hidden'\r\n                aria-label='Food'\r\n              >\r\n                <Select.Value placeholder='Select a size' />\r\n                <Select.Icon className='text-black'>\r\n                  <ChevronDownIcon />\r\n                </Select.Icon>\r\n              </Select.Trigger>\r\n              <Select.Portal>\r\n                <Select.Content className='overflow-hidden bg-white  text-black rounded-md shadow-[0px_10px_38px_-10px_rgba(22,23,24,0.35),0px_10px_20px_-15px_rgba(22,23,24,0.2)]'>\r\n                  <Select.ScrollUpButton className='flex items-center justify-center h-[25px] bg-white text-black cursor-default'>\r\n                    <ChevronUpIcon />\r\n                  </Select.ScrollUpButton>\r\n                  <Select.Viewport className='p-[5px]'>\r\n                    <Select.Group>\r\n                      <SelectItem value='l'>L: length:65-68</SelectItem>\r\n                      <SelectItem value='s'> S: length:68-71</SelectItem>\r\n                      <SelectItem value='m'>M: length:71-73</SelectItem>\r\n                      <SelectItem value='xl'>XL: length:76-78</SelectItem>\r\n                    </Select.Group>\r\n                  </Select.Viewport>\r\n                </Select.Content>\r\n              </Select.Portal>\r\n            </Select.Root>\r\n          </div>\r\n          <div className='flex justify-between py-2'>\r\n            {/* <span className=\"font-semibold text-xl\">$39</span> */}\r\n            <div className='flex gap-2 items-center'>\r\n              {CardArr.map((data, index) => (\r\n                <button\r\n                  key={index}\r\n                  onClick={() => handleColorButtonClick(data.img, data.color)}\r\n                  className={` relative w-6 h-6 border  rounded-full grid place-content-center transition-all ${\r\n                    selectedColor === data.color\r\n                      ? ' border-black'\r\n                      : 'border-gray-200'\r\n                  }`}\r\n                >\r\n                  <span\r\n                    className='w-4 h-4 rounded-full inline-block'\r\n                    style={{\r\n                      backgroundColor: data.color,\r\n                    }}\r\n                  ></span>\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <button className='w-full text-white flex justify-center items-center gap-2 bg-linear-to-r dark:from-[#070e41] dark:to-[#263381] from-[#3e5068] to-[#0c1970] py-3 rounded-md'>\r\n            <ShoppingCart className='w-5 h-5' /> Add to cart\r\n          </button>\r\n        </article>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst SelectItem = React.forwardRef(\r\n  ({ children, className, ...props }: any, forwardedRef) => {\r\n    return (\r\n      <Select.Item\r\n        className={cn(\r\n          'text-[13px] leading-none text-violet11 rounded-[3px] flex items-center h-[25px] pr-[35px] pl-[25px] relative select-none data-[disabled]:text-mauve8 data-disabled:pointer-events-none data-highlighted:outline-hidden data-[highlighted]:bg-violet9 data-[highlighted]:text-violet1',\r\n          className\r\n        )}\r\n        {...props}\r\n        ref={forwardedRef}\r\n      >\r\n        <Select.ItemText>{children}</Select.ItemText>\r\n        <Select.ItemIndicator className='absolute left-0 w-[25px] inline-flex items-center justify-center'>\r\n          <CheckIcon />\r\n        </Select.ItemIndicator>\r\n      </Select.Item>\r\n    );\r\n  }\r\n);\r\nexport default Card2;\r\n",
      "type": "registry:component"
    }
  ]
}