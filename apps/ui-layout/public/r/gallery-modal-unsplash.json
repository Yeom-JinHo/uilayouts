{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "gallery-modal-unsplash",
  "type": "registry:component",
  "dependencies": [
    "motion",
    "lucide-react"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./registry/components/modal/gallery-modal/unsplash-modal.tsx",
      "content": "// inspired by tom is loading\r\n'use client';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { AnimatePresence, motion, useInView } from 'motion/react';\r\nimport Image from 'next/image';\r\nimport { Download, X } from 'lucide-react';\r\nimport { items } from '@/components/website/constant';\r\n\r\nfunction UnsplashGrid() {\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      <div className='container mx-auto sm:p-4 px-0 '>\r\n        <div className='columns-2 md:columns-3 2xl:columns-4 gap-4'>\r\n          <>\r\n            {items\r\n              .slice(5, 14)\r\n              ?.map((item, index) => (\r\n                <ImageItem\r\n                  key={item.id}\r\n                  item={item}\r\n                  index={index}\r\n                  setSelected={setSelected}\r\n                />\r\n              ))}\r\n          </>\r\n        </div>\r\n      </div>\r\n      <Modal selected={selected} setSelected={setSelected} />\r\n    </>\r\n  );\r\n}\r\ninterface Item {\r\n  id: number;\r\n  url: string;\r\n  title: string;\r\n}\r\n\r\ninterface ImageItemProps {\r\n  item: Item;\r\n  index: number | string;\r\n  setSelected: any;\r\n}\r\n\r\nfunction ImageItem({ item, index, setSelected }: ImageItemProps) {\r\n  const ref = useRef(null);\r\n  const isInView = useInView(ref, { once: true });\r\n\r\n  return (\r\n    <motion.figure\r\n      initial='hidden'\r\n      animate={isInView && 'visible'}\r\n      ref={ref}\r\n      className=\"inline-block group w-full rounded-md  relative dark:bg-black bg-white  before:absolute before:top-0 before:content-[''] before:h-full before:w-full hover:before:bg-linear-to-t dark:before:from-gray-900  before:from-gray-200/90 before:from-5% before:to-transparent before:to-90% cursor-pointer\"\r\n      onClick={() => setSelected(item)}\r\n    >\r\n      <motion.img\r\n        layoutId={`card-${item.id}`}\r\n        whileHover={{ scale: 1.025 }}\r\n        src={item.url}\r\n        className='w-full bg-base-100 shadow-xl image-full cursor-pointer'\r\n      />\r\n      <div className='flex flex-wrap mt-2 absolute bottom-0 left-0 p-2 group-hover:opacity-100 opacity-0 font-semibold '>\r\n        <h1>{item.title}</h1>\r\n      </div>\r\n    </motion.figure>\r\n  );\r\n}\r\n\r\ninterface ItemType {\r\n  id: number;\r\n  url: string;\r\n  title: string;\r\n  tags: any[];\r\n  description: string;\r\n}\r\n\r\ninterface ModalProps {\r\n  selected: ItemType | null;\r\n  setSelected: any;\r\n}\r\nfunction Modal({ selected, setSelected }: ModalProps) {\r\n  const itemVariants = {\r\n    initial: {\r\n      opacity: 0,\r\n      y: 10,\r\n    },\r\n    animate: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        duration: 0.3,\r\n        staggerChildren: 0.2, // Adjust the stagger delay as needed\r\n      },\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      y: 20,\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    if (selected) {\r\n      document.body.classList.add('overflow-hidden');\r\n    } else {\r\n      document.body.classList.remove('overflow-hidden');\r\n    }\r\n\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (event.key === 'Escape') {\r\n        setSelected(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [selected]);\r\n  return (\r\n    <AnimatePresence>\r\n      {selected && (\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          onClick={() => setSelected(null)}\r\n          className='fixed inset-0 bg-black/50 backdrop-blur-xs z-50 cursor-pointer overflow-y-scroll'\r\n        >\r\n          <motion.div\r\n            onClick={(e) => e.stopPropagation()}\r\n            layoutId={`card-${selected.id}`}\r\n            className='w-full max-w-[1000px] relative overflow-x-hidden mx-auto my-8 cursor-default dark:bg-[#202020] bg-[#ebebeb] '\r\n          >\r\n            <button\r\n              className='absolute top-2 right-2  p-2 mix-blend-multiply'\r\n              onClick={() => setSelected(null)}\r\n            >\r\n              <X />\r\n            </button>\r\n            <motion.div className=' p-2 h-[70vh]  rounded-md'>\r\n              <Image\r\n                width={400}\r\n                height={400}\r\n                alt='img'\r\n                src={selected.url}\r\n                className='w-full h-full object-contain rounded-md dark:bg-black bg-white'\r\n              />\r\n            </motion.div>\r\n            <motion.div\r\n              variants={itemVariants}\r\n              initial='initial'\r\n              animate='animate'\r\n              exit='exit'\r\n              className='bg-white dark:bg-black dark:text-white text-black p-4  rounded-md  px-8'\r\n            >\r\n              <motion.h3\r\n                variants={itemVariants}\r\n                className='text-2xl font-bold mb-2'\r\n              >\r\n                {selected.title}\r\n              </motion.h3>\r\n              <motion.div variants={itemVariants} className='flex gap-2'>\r\n                {selected.tags.map((tag) => {\r\n                  return (\r\n                    <div\r\n                      className='bg-base-300 border  dark:bg-gray-100 bg-gray-50 text-zinc-600 px-2 py-1 rounded-md'\r\n                      key={tag}\r\n                    >\r\n                      {tag}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </motion.div>\r\n              <motion.p variants={itemVariants} className='my-4'>\r\n                {selected.description}\r\n              </motion.p>\r\n              <motion.a\r\n                variants={itemVariants}\r\n                className='flex  w-fit gap-2 cursor-pointer px-4 py-2 dark:hover:bg-black bg-black hover:bg-white hover:text-black text-white border-black dark:hover:text-white transition-colors border-2 dark:border-white dark:bg-white dark:text-black rounded-full font-semibold'\r\n                href='#'\r\n              >\r\n                Download\r\n                <Download />\r\n              </motion.a>\r\n            </motion.div>\r\n          </motion.div>\r\n        </motion.div>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n}\r\n\r\nexport default UnsplashGrid;\r\n",
      "type": "registry:component"
    }
  ]
}