{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "image-mousetrail-without-component",
  "type": "registry:component",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./registry/components/mousetrail/without-component-mousetrail.tsx",
      "content": "//@ts-nocheck\r\n'use client';\r\nimport { items } from '@/components/website/constant';\r\nimport React, { useRef, createRef } from 'react';\r\n\r\nexport default function ImageMouseTrail3() {\r\n  const containerRef = useRef(null);\r\n  const refs = useRef(items.map(() => createRef<HTMLImageElement>()));\r\n\r\n  let globalIndex = 0;\r\n  let last = { x: 0, y: 0 };\r\n\r\n  const activate = (image, x, y) => {\r\n    const containerRect = containerRef.current?.getBoundingClientRect();\r\n    const relativeX = x - containerRect.left;\r\n    const relativeY = y - containerRect.top;\r\n    image.style.left = `${relativeX}px`;\r\n    image.style.top = `${relativeY}px`;\r\n\r\n    image.style.zIndex = (globalIndex % items.length) + 1;\r\n\r\n    image.dataset.status = 'active';\r\n    setTimeout(() => {\r\n      image.dataset.status = 'inactive';\r\n    }, 1000);\r\n    last = { x, y };\r\n  };\r\n\r\n  const distanceFromLast = (x, y) => {\r\n    return Math.hypot(x - last.x, y - last.y);\r\n  };\r\n  const deactivate = (image) => {\r\n    image.dataset.status = 'inactive';\r\n  };\r\n  const handleOnMove = (e) => {\r\n    if (distanceFromLast(e.clientX, e.clientY) > window.innerWidth / 20) {\r\n      const lead = refs.current[globalIndex % refs.current.length].current;\r\n\r\n      const tail =\r\n        refs.current[(globalIndex - 5) % refs.current.length]?.current;\r\n\r\n      if (lead) activate(lead, e.clientX, e.clientY);\r\n      if (tail) deactivate(tail);\r\n\r\n      globalIndex++;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section\r\n      onMouseMove={handleOnMove}\r\n      onTouchMove={(e) => handleOnMove(e.touches[0])}\r\n      ref={containerRef}\r\n      className='grid place-content-center h-[600px] w-full bg-[#e0dfdf] relative overflow-hidden rounded-lg'\r\n    >\r\n      {items.map((item, index) => (\r\n        <img\r\n          key={index}\r\n          className=\"object-cover z-10   w-40 h-48 scale-0 opacity:0 data-[status='active']:scale-100  data-[status='active']:opacity-100 transition-transform duration-500 data-[status='active']:ease-out-expo  absolute  -translate-y-[50%] -translate-x-[50%]\"\r\n          data-index={index}\r\n          data-status='inactive'\r\n          src={item.url}\r\n          alt={`image-${index}`}\r\n          ref={refs.current[index]}\r\n        />\r\n      ))}\r\n      <article className='relative z-20 mix-blend-difference'>\r\n        <h1 className='md:text-4xl text-2xl text-center font-semibold'>\r\n          âœ¨ Experience Interactive Designs <br />\r\n          with Dynamic Mouse Trails <br />\r\n          built with Tailwind CSS\r\n        </h1>\r\n      </article>\r\n    </section>\r\n  );\r\n}\r\n",
      "type": "registry:component"
    }
  ]
}