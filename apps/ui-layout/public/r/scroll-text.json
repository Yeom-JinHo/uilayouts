{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "scroll-text",
  "type": "registry:component",
  "dependencies": [
    "motion",
    "@motionone/utils"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./components/ui/scroll-text.tsx",
      "content": "// @ts-nocheck\n\n'use client';\n\nimport React, { useRef, type JSX } from 'react';\nimport {\n  ForwardRefComponent,\n  motion,\n  HTMLMotionProps,\n  useInView,\n  Variant,\n} from 'motion/react';\nimport { cn } from '@/lib/utils';\ntype Direction = 'up' | 'down' | 'left' | 'right';\n\nconst containerVariants = {\n  hidden: {},\n  visible: {\n    transition: {\n      staggerChildren: 0.1,\n    },\n  },\n};\nconst generateVariants = (\n  direction: Direction\n): { hidden: any; visible: any } => {\n  const axis = direction === 'left' || direction === 'right' ? 'x' : 'y';\n  const value = direction === 'right' || direction === 'down' ? 100 : -100;\n\n  return {\n    hidden: { filter: 'blur(10px)', opacity: 0, [axis]: value },\n    visible: {\n      filter: 'blur(0px)',\n      opacity: 1,\n      [axis]: 0,\n      transition: {\n        duration: 0.4,\n        ease: 'easeOut',\n      },\n    },\n  };\n};\n\nconst defaultViewport = { amount: 0.3, margin: '0px 0px 0px 0px' };\n\nconst TextAnimation = ({\n  as = 'h1',\n  text,\n  classname = '',\n  viewport = defaultViewport,\n  variants,\n  direction = 'down',\n  letterAnime = false,\n  lineAnime = false,\n}: {\n  text: string;\n  classname?: string;\n  as?: keyof JSX.IntrinsicElements;\n  viewport?: {\n    amount?: number;\n    margin?: string;\n    once?: boolean;\n  };\n  variants?: {\n    hidden?: any;\n    visible?: any;\n  };\n  direction?: Direction;\n  letterAnime?: boolean;\n  lineAnime?: boolean;\n}) => {\n  const baseVariants = variants || generateVariants(direction);\n  const modifiedVariants = {\n    hidden: baseVariants.hidden,\n    visible: {\n      ...baseVariants.visible,\n    },\n  };\n  const MotionComponent = motion[\n    as as keyof typeof motion\n  ] as React.ComponentType<HTMLMotionProps<any>>;\n  return (\n    <>\n      <>\n        <MotionComponent\n          whileInView='visible'\n          initial='hidden'\n          variants={containerVariants}\n          viewport={viewport}\n          className={cn(\n            `inline-block dark:text-white text-black uppercase  `,\n            classname\n          )}\n        >\n          {lineAnime ? (\n            <>\n              {' '}\n              <motion.span\n                className={`inline-block `}\n                variants={modifiedVariants}\n              >\n                {text}\n              </motion.span>\n            </>\n          ) : (\n            <>\n              {text.split(' ').map((word: string, index: number) => (\n                <motion.span\n                  key={index}\n                  className={`inline-block `}\n                  variants={letterAnime === false ? modifiedVariants : {}}\n                >\n                  {letterAnime ? (\n                    <>\n                      {word.split('').map((letter: string, index: number) => (\n                        <>\n                          <motion.span\n                            className={`inline-block `}\n                            variants={modifiedVariants}\n                          >\n                            {letter}\n                          </motion.span>\n                        </>\n                      ))}\n                      &nbsp;\n                    </>\n                  ) : (\n                    <>{word}&nbsp;</>\n                  )}\n                </motion.span>\n              ))}\n            </>\n          )}\n        </MotionComponent>\n      </>\n    </>\n  );\n};\n\nexport default TextAnimation;\n",
      "type": "registry:component"
    }
  ]
}