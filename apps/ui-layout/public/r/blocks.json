{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "blocks",
  "type": "registry:component",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./components/ui/blocks.tsx",
      "content": "'use client';\r\nimport { cn } from '@/lib/utils';\r\nimport React, { useEffect, useState, type JSX } from 'react';\r\n\r\nfunction Blocks({\r\n  activeDivs,\r\n  divClass,\r\n  classname,\r\n  activeDivsClass,\r\n  containerRef,\r\n}: {\r\n  activeDivsClass?: string;\r\n  activeDivs?: any;\r\n  divClass?: string;\r\n  classname?: string;\r\n  containerRef: React.RefObject<HTMLDivElement | null>;\r\n}) {\r\n  const [blocks, setBlocks] = useState<JSX.Element[]>([]);\r\n\r\n  useEffect(() => {\r\n    const updateBlocks = () => {\r\n      const container = containerRef.current;\r\n      if (container) {\r\n        const containerWidth = container.clientWidth;\r\n        const containerHeight = container.clientHeight;\r\n        const blockSize = containerWidth * 0.06; // Using 6% of section width for the block size\r\n\r\n        const columns = Math.floor(containerWidth / blockSize);\r\n        const rows = Math.floor(containerHeight / blockSize);\r\n\r\n        const newBlocks = Array.from({ length: columns }, (_, columnIndex) => (\r\n          <div key={columnIndex} className='w-[6vw] h-full'>\r\n            {Array.from({ length: rows }, (_, rowIndex) => (\r\n              <div\r\n                key={rowIndex}\r\n                className={cn(\r\n                  `h-[6vh] w-full border-[1px] border-[#5dcece09] ${\r\n                    // @ts-ignore\r\n                    activeDivs[columnIndex]?.has(rowIndex)\r\n                      ? `${activeDivsClass}`\r\n                      : ''\r\n                  }`,\r\n                  divClass\r\n                )}\r\n                style={{ height: `${blockSize}px` }}\r\n              ></div>\r\n            ))}\r\n          </div>\r\n        ));\r\n\r\n        setBlocks(newBlocks);\r\n      }\r\n    };\r\n\r\n    updateBlocks();\r\n    window.addEventListener('resize', updateBlocks);\r\n\r\n    return () => window.removeEventListener('resize', updateBlocks);\r\n  }, [activeDivs, activeDivsClass, divClass, containerRef]);\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        'flex h-full overflow-hidden top-0 -inset-0 left-0 absolute',\r\n        classname\r\n      )}\r\n    >\r\n      {blocks}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Blocks;\r\n",
      "type": "registry:component"
    }
  ]
}