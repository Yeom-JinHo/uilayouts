{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "swapy",
  "type": "registry:component",
  "dependencies": [
    "swapy"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./components/ui/swapy.tsx",
      "content": "'use client';\r\n\r\nimport type React from 'react';\r\nimport { useEffect, useRef } from 'react';\r\nimport { createSwapy, type SlotItemMapArray } from 'swapy';\r\nimport { cn } from '@/lib/utils';\r\n\r\ntype AnimationType = 'dynamic' | 'spring' | 'none';\r\ntype SwapMode = 'hover' | 'drop';\r\n\r\ntype Config = {\r\n  animation: AnimationType;\r\n  continuousMode: boolean;\r\n  manualSwap: boolean;\r\n  swapMode: SwapMode;\r\n  autoScrollOnDrag: boolean;\r\n};\r\n\r\ntype SwapyLayoutProps = {\r\n  id: string;\r\n  enable?: boolean;\r\n  onSwap?: (event: { newSlotItemMap: { asArray: SlotItemMapArray } }) => void;\r\n  config?: Partial<Config>;\r\n  className?: string;\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport const SwapyLayout = ({\r\n  id,\r\n  onSwap,\r\n  config = {},\r\n  className,\r\n  children,\r\n}: SwapyLayoutProps) => {\r\n  const containerRef = useRef<HTMLDivElement | null>(null);\r\n  const swapyRef = useRef<ReturnType<typeof createSwapy> | null>(null);\r\n\r\n  useEffect(() => {\r\n    const container = containerRef.current;\r\n    if (!container) return;\r\n\r\n    swapyRef.current = createSwapy(container, config);\r\n\r\n    if (onSwap) {\r\n      swapyRef.current.onSwap(onSwap);\r\n    }\r\n\r\n    return () => {\r\n      swapyRef.current?.destroy();\r\n    };\r\n  }, [config, onSwap]);\r\n\r\n  return (\r\n    <div id={id} ref={containerRef} className={className}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const DragHandle = ({ className }: { className?: string }) => {\r\n  return (\r\n    <div\r\n      data-swapy-handle\r\n      className={cn(\r\n        'absolute top-2 left-2 cursor-grab  text-gray-500  rounded-md bg-transparent  active:cursor-grabbing  ',\r\n        className\r\n      )}\r\n    >\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        width='24'\r\n        height='24'\r\n        viewBox='0 0 24 24'\r\n        fill='none'\r\n        stroke='currentColor'\r\n        stroke-width='2'\r\n        stroke-linecap='round'\r\n        stroke-linejoin='round'\r\n        className='lucide lucide-grip-vertical-icon lucide-grip-vertical opacity-80'\r\n      >\r\n        <circle cx='9' cy='12' r='1' />\r\n        <circle cx='9' cy='5' r='1' />\r\n        <circle cx='9' cy='19' r='1' />\r\n        <circle cx='15' cy='12' r='1' />\r\n        <circle cx='15' cy='5' r='1' />\r\n        <circle cx='15' cy='19' r='1' />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const SwapySlot = ({\r\n  id,\r\n  className,\r\n  children,\r\n}: {\r\n  id: string;\r\n  className?: string;\r\n  children: React.ReactNode;\r\n}) => {\r\n  return (\r\n    <div\r\n      className={cn(\r\n        'data-[swapy-highlighted]:bg-neutral-200 data-[swapy-highlighted]:dark:bg-neutral-800',\r\n        className\r\n      )}\r\n      data-swapy-slot={id}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst dragOpacityClassMap: Record<number, string> = {\r\n  10: 'data-[swapy-dragging]:opacity-10',\r\n  20: 'data-[swapy-dragging]:opacity-20',\r\n  30: 'data-[swapy-dragging]:opacity-30',\r\n  40: 'data-[swapy-dragging]:opacity-40',\r\n  50: 'data-[swapy-dragging]:opacity-50',\r\n  60: 'data-[swapy-dragging]:opacity-60',\r\n  70: 'data-[swapy-dragging]:opacity-70',\r\n  80: 'data-[swapy-dragging]:opacity-80',\r\n  90: 'data-[swapy-dragging]:opacity-90',\r\n  100: 'data-[swapy-dragging]:opacity-100',\r\n};\r\n\r\nexport const SwapyItem = ({\r\n  id,\r\n  className,\r\n  children,\r\n  dragItemOpacity = 100, // default to 100\r\n}: {\r\n  id: string;\r\n  className?: string;\r\n  children: React.ReactNode;\r\n  dragItemOpacity?: number;\r\n}) => {\r\n  const opacityClass =\r\n    dragOpacityClassMap[dragItemOpacity] ?? 'data-[swapy-dragging]:opacity-50';\r\n  return (\r\n    <div className={cn(opacityClass, className)} data-swapy-item={id}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n",
      "type": "registry:component"
    }
  ]
}