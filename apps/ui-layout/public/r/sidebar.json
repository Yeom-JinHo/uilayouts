{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "sidebar",
  "type": "registry:component",
  "dependencies": [
    "vaul",
    "lucide-react"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./components/ui/drawer/vaul-sidebar.tsx",
      "content": "'use client';\nimport React, {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  ReactNode,\n} from 'react';\nimport { X } from 'lucide-react';\nimport { Drawer as VaulSidebar } from 'vaul';\nimport { cn } from '@/lib/utils';\n\ninterface DrawerContextProps {\n  open: boolean;\n  setOpen: (open: boolean) => void;\n}\n\nconst DrawerContext = createContext<DrawerContextProps | undefined>(undefined);\n\nconst useSidebarDrawer = () => {\n  const context = useContext(DrawerContext);\n  if (!context) {\n    throw new Error('useDrawer must be used within a DrawerProvider');\n  }\n  return context;\n};\n\ninterface DrawerSidebarProps {\n  children: ReactNode;\n  open?: boolean;\n  setOpen?: (open: boolean) => void;\n  direction?: 'left' | 'right';\n  outsideClose?: boolean;\n  className?: string;\n  triggerClassName?: string;\n  DefaultTrigger?: () => React.ReactNode; // Changed to a function that returns ReactNode\n}\n\nexport function SidebarDrawer({\n  children,\n  open: controlledOpen,\n  setOpen: controlledSetOpen,\n  direction = 'left',\n  outsideClose = true,\n  className,\n  triggerClassName,\n  DefaultTrigger, // Now a function prop\n}: DrawerSidebarProps) {\n  const [internalOpen, setInternalOpen] = useState(false);\n  const open = controlledOpen !== undefined ? controlledOpen : internalOpen;\n  const setOpen =\n    controlledSetOpen !== undefined ? controlledSetOpen : setInternalOpen;\n\n  const [isDesktop, setIsDesktop] = useState(false);\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(min-width: 768px)');\n    const handleMediaChange = (event: MediaQueryListEvent) => {\n      setIsDesktop(event.matches);\n    };\n\n    setIsDesktop(mediaQuery.matches);\n    mediaQuery.addEventListener('change', handleMediaChange);\n\n    return () => {\n      mediaQuery.removeEventListener('change', handleMediaChange);\n    };\n  }, []);\n\n  return (\n    <DrawerContext.Provider value={{ open, setOpen }}>\n      <>\n        {DefaultTrigger && (\n          <div onClick={() => setOpen(true)}>{DefaultTrigger()}</div>\n        )}\n\n        <VaulSidebar.Root\n          open={open}\n          direction={direction === 'right' ? 'right' : 'left'}\n          onOpenChange={setOpen}\n          dismissible={isDesktop ? false : true}\n        >\n          <VaulSidebar.Portal>\n            <VaulSidebar.Overlay\n              className='fixed inset-0 dark:bg-black/40 bg-white/50 backdrop-blur-sm z-50  '\n              onClick={() => setOpen(false)}\n            />\n            <VaulSidebar.Content\n              className={cn(\n                ` border-l z-50  ${\n                  outsideClose\n                    ? 'sm:w-[450px] w-[90%] h-[100%]  dark:bg-zinc-950 bg-zinc-100'\n                    : `w-full h-[100%]  `\n                } fixed bottom-0  ${\n                  direction === 'right' ? 'right-0' : 'left-0'\n                }`,\n                className\n              )}\n            >\n              <div\n                className={`${\n                  outsideClose\n                    ? 'w-full h-full'\n                    : 'dark:bg-gray-900 relative bg-white   border-r sm:w-[450px] w-[90%] h-full'\n                } `}\n              >\n                {isDesktop ? (\n                  <>\n                    <button\n                      className='flex justify-end w-full absolute right-2 top-2'\n                      onClick={() => setOpen(false)}\n                    >\n                      <X />\n                    </button>\n                  </>\n                ) : (\n                  <>\n                    <div\n                      className={`absolute top-[40%] ${\n                        direction === 'right' ? 'left-2' : 'right-2'\n                      } mx-auto h-16 w-[0.30rem] flex-shrink-0 rounded-full bg-gray-600 my-4`}\n                    />\n                  </>\n                )}\n                {children}\n              </div>\n            </VaulSidebar.Content>\n          </VaulSidebar.Portal>\n        </VaulSidebar.Root>\n      </>\n    </DrawerContext.Provider>\n  );\n}\n\nexport function DrawerContent({ children }: { children: ReactNode }) {\n  return <>{children}</>;\n}\n",
      "type": "registry:component"
    }
  ]
}