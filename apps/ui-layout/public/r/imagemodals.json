{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "imagemodals",
  "type": "registry:component",
  "dependencies": [
    "motion",
    "lucide-react"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./registry/components/modal/image-modals.tsx",
      "content": "'use client';\r\nimport { motion, AnimatePresence, MotionConfig } from 'motion/react';\r\nimport { XIcon } from 'lucide-react';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { transition } from '@/lib/utils';\r\n\r\nexport default function Dialog() {\r\n  const [index, setIndex] = useState(5);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      document.body.classList.add('overflow-hidden');\r\n    } else {\r\n      document.body.classList.remove('overflow-hidden');\r\n    }\r\n\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (event.key === 'Escape') {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [isOpen]);\r\n  type Item = {\r\n    id: number;\r\n    imgSrc?: string;\r\n    videoSrc?: string;\r\n  };\r\n\r\n  const items: Item[] = [\r\n    {\r\n      id: 1,\r\n      imgSrc:\r\n        'https://images.unsplash.com/photo-1726824766931-4bd8b59af37c?q=80&w=1000&auto=format&fit=crop',\r\n    },\r\n    {\r\n      id: 2,\r\n      videoSrc:\r\n        'https://videos.pexels.com/video-files/7710243/7710243-uhd_2560_1440_30fps.mp4',\r\n    },\r\n  ];\r\n  const [carouselWidth, setCarouselWidth] = useState(0);\r\n  const carousel = useRef(null);\r\n  useEffect(() => {\r\n    setCarouselWidth(\r\n      // @ts-ignore\r\n      carousel.current.scrollWidth - carousel.current.offsetWidth\r\n    );\r\n  }, [carousel]);\r\n  return (\r\n    <div className='relative h-full'>\r\n      <MotionConfig transition={transition}>\r\n        <motion.div\r\n          ref={carousel}\r\n          drag='x'\r\n          dragElastic={0.2}\r\n          dragConstraints={{ right: 0, left: -carouselWidth }}\r\n          dragTransition={{ bounceDamping: 30 }}\r\n          transition={{ duration: 8, ease: 'easeInOut' }}\r\n          className='flex w-full  gap-4   py-10'\r\n        >\r\n          {items.map((item, i) => {\r\n            return (\r\n              <>\r\n                <motion.div\r\n                  // @ts-ignore\r\n                  key={item}\r\n                  className='w-full flex relative  flex-col overflow-hidden border    dark:bg-black bg-gray-300 hover:bg-gray-200 dark:hover:bg-gray-950'\r\n                  layoutId={`dialog-${item?.id}`}\r\n                  style={{\r\n                    borderRadius: '12px',\r\n                  }}\r\n                  tabIndex={i}\r\n                  onClick={() => {\r\n                    setIndex(i);\r\n                    setIsOpen(true);\r\n                  }}\r\n                >\r\n                  {item?.imgSrc && (\r\n                    <motion.div\r\n                      layoutId={`dialog-img-${item.id}`}\r\n                      className='w-full h-full'\r\n                    >\r\n                      <img\r\n                        src={item.imgSrc}\r\n                        alt='A desk lamp designed by Edouard Wilfrid Buquet in 1925. It features a double-arm design and is made from nickel-plated brass, aluminium and varnished wood.'\r\n                        className=' w-full object-cover'\r\n                      />\r\n                    </motion.div>\r\n                  )}\r\n                  {item?.videoSrc && (\r\n                    <motion.div\r\n                      layoutId={`dialog-video-${item.id}`}\r\n                      className='w-full h-full'\r\n                    >\r\n                      <video\r\n                        autoPlay\r\n                        muted\r\n                        loop\r\n                        className='h-full w-full object-cover  rounded-xs'\r\n                      >\r\n                        <source src={item.videoSrc!} type='video/mp4' />\r\n                      </video>\r\n                    </motion.div>\r\n                  )}\r\n                </motion.div>\r\n              </>\r\n            );\r\n          })}\r\n        </motion.div>\r\n        <AnimatePresence initial={false} mode='sync'>\r\n          {isOpen && (\r\n            <>\r\n              <motion.div\r\n                key={`backdrop-${items[index].id}`}\r\n                className='fixed inset-0 h-full w-full dark:bg-black/25 bg-white/95 backdrop-blur-xs '\r\n                variants={{ open: { opacity: 1 }, closed: { opacity: 0 } }}\r\n                initial='closed'\r\n                animate='open'\r\n                exit='closed'\r\n                onClick={() => {\r\n                  setIsOpen(false);\r\n                }}\r\n              />\r\n              <motion.div\r\n                key='dialog'\r\n                className='pointer-events-none fixed inset-0 flex items-center justify-center z-50'\r\n              >\r\n                <motion.div\r\n                  className='pointer-events-auto relative flex flex-col overflow-hidden   dark:bg-gray-950 bg-gray-200 border w-[80%] h-[90%] '\r\n                  layoutId={`dialog-${items[index].id}`}\r\n                  tabIndex={-1}\r\n                  style={{\r\n                    borderRadius: '24px',\r\n                  }}\r\n                >\r\n                  {items[index]?.imgSrc && (\r\n                    <motion.div\r\n                      layoutId={`dialog-img-${items[index].id}`}\r\n                      className='w-full h-full'\r\n                    >\r\n                      <img\r\n                        src={items[index].imgSrc}\r\n                        alt=''\r\n                        className='h-full w-full object-cover'\r\n                      />\r\n                    </motion.div>\r\n                  )}\r\n                  {items[index]?.videoSrc && (\r\n                    <motion.div\r\n                      layoutId={`dialog-video-${items[index].id}`}\r\n                      className='w-full h-full'\r\n                    >\r\n                      <video\r\n                        autoPlay\r\n                        muted\r\n                        loop\r\n                        controls\r\n                        className='h-full w-full object-cover  rounded-xs'\r\n                      >\r\n                        <source src={items[index].videoSrc!} type='video/mp4' />\r\n                      </video>\r\n                    </motion.div>\r\n                  )}\r\n\r\n                  <button\r\n                    onClick={() => setIsOpen(false)}\r\n                    className='absolute right-6 top-6 p-3 text-zinc-50 cursor-pointer dark:bg-gray-900 bg-gray-400 hover:bg-gray-500 rounded-full dark:hover:bg-gray-800'\r\n                    type='button'\r\n                    aria-label='Close dialog'\r\n                  >\r\n                    <XIcon size={24} />\r\n                  </button>\r\n                </motion.div>\r\n              </motion.div>\r\n            </>\r\n          )}\r\n        </AnimatePresence>\r\n      </MotionConfig>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:component"
    },
    {
      "path": "./components/ui/modal/media-modal.tsx",
      "content": "'use client';\r\nimport React, { useEffect, useId, useState } from 'react';\r\nimport { AnimatePresence, motion, MotionConfig } from 'motion/react';\r\nimport { useMediaQuery } from '@/hooks/use-media-query';\r\nimport { XIcon } from 'lucide-react';\r\nimport { transition } from '@/lib/utils';\r\n\r\ninterface IMediaModal {\r\n  imgSrc?: string;\r\n  videoSrc?: string;\r\n  className?: string;\r\n}\r\n\r\nexport function MediaModal({ imgSrc, videoSrc, className }: IMediaModal) {\r\n  const [isMediaModalOpen, setIsMediaModalOpen] = useState(false);\r\n  const isDesktop = useMediaQuery('(min-width:768px)');\r\n  const uniqueId = useId();\r\n\r\n  useEffect(() => {\r\n    if (isMediaModalOpen) {\r\n      document.body.classList.add('overflow-hidden');\r\n    } else {\r\n      document.body.classList.remove('overflow-hidden');\r\n    }\r\n\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (event.key === 'Escape') {\r\n        setIsMediaModalOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [isMediaModalOpen]);\r\n  return (\r\n    <>\r\n      <MotionConfig transition={transition}>\r\n        <>\r\n          <motion.div\r\n            // @ts-ignore\r\n            className='w-full h-full flex relative  flex-col overflow-hidden border    dark:bg-black bg-gray-300 hover:bg-gray-200 dark:hover:bg-gray-950'\r\n            layoutId={`dialog-${uniqueId}`}\r\n            style={{\r\n              borderRadius: '12px',\r\n            }}\r\n            onClick={() => {\r\n              setIsMediaModalOpen(true);\r\n            }}\r\n          >\r\n            {imgSrc && (\r\n              <motion.div\r\n                layoutId={`dialog-img-${uniqueId}`}\r\n                className='w-full h-full'\r\n              >\r\n                {/* eslint-disable-next-line @next/next/no-img-element */}\r\n                <img\r\n                  src={imgSrc}\r\n                  alt='A desk lamp designed by Edouard Wilfrid Buquet in 1925. It features a double-arm design and is made from nickel-plated brass, aluminium and varnished wood.'\r\n                  className=' w-full object-cover h-full'\r\n                />\r\n              </motion.div>\r\n            )}\r\n            {videoSrc && (\r\n              <motion.div\r\n                layoutId={`dialog-video-${uniqueId}`}\r\n                className='w-full h-full'\r\n              >\r\n                <video\r\n                  autoPlay\r\n                  muted\r\n                  loop\r\n                  className='h-full w-full object-cover  rounded-xs'\r\n                >\r\n                  <source src={videoSrc!} type='video/mp4' />\r\n                </video>\r\n              </motion.div>\r\n            )}\r\n          </motion.div>\r\n        </>\r\n        {/* {createPortal( */}\r\n        <AnimatePresence initial={false} mode='sync'>\r\n          {isMediaModalOpen && (\r\n            <>\r\n              <motion.div\r\n                key={`backdrop-${uniqueId}`}\r\n                className='fixed inset-0 h-full w-full z-50  dark:bg-black/25 bg-white/95 backdrop-blur-xs '\r\n                variants={{ open: { opacity: 1 }, closed: { opacity: 0 } }}\r\n                initial='closed'\r\n                animate='open'\r\n                exit='closed'\r\n                onClick={() => {\r\n                  setIsMediaModalOpen(false);\r\n                }}\r\n              />\r\n              <motion.div\r\n                key='dialog'\r\n                className='pointer-events-none fixed inset-0 flex items-center justify-center z-50'\r\n              >\r\n                <motion.div\r\n                  className='pointer-events-auto relative flex flex-col overflow-hidden   dark:bg-gray-950 bg-gray-200 border w-[80%] h-[90%] '\r\n                  layoutId={`dialog-${uniqueId}`}\r\n                  tabIndex={-1}\r\n                  style={{\r\n                    borderRadius: '24px',\r\n                  }}\r\n                >\r\n                  {imgSrc && (\r\n                    <motion.div\r\n                      layoutId={`dialog-img-${uniqueId}`}\r\n                      className='w-full h-full'\r\n                    >\r\n                      {/* eslint-disable-next-line @next/next/no-img-element */}\r\n                      <img\r\n                        src={imgSrc}\r\n                        alt=''\r\n                        className='h-full w-full object-cover'\r\n                      />\r\n                    </motion.div>\r\n                  )}\r\n                  {videoSrc && (\r\n                    <motion.div\r\n                      layoutId={`dialog-video-${uniqueId}`}\r\n                      className='w-full h-full'\r\n                    >\r\n                      <video\r\n                        autoPlay\r\n                        muted\r\n                        loop\r\n                        controls\r\n                        className='h-full w-full object-cover  rounded-xs'\r\n                      >\r\n                        <source src={videoSrc!} type='video/mp4' />\r\n                      </video>\r\n                    </motion.div>\r\n                  )}\r\n\r\n                  <button\r\n                    onClick={() => setIsMediaModalOpen(false)}\r\n                    className='absolute right-6 top-6 p-3 text-zinc-50 cursor-pointer dark:bg-gray-900 bg-gray-400 hover:bg-gray-500 rounded-xl dark:hover:bg-gray-800'\r\n                    type='button'\r\n                    aria-label='Close dialog'\r\n                  >\r\n                    <XIcon size={24} />\r\n                  </button>\r\n                </motion.div>\r\n              </motion.div>\r\n            </>\r\n          )}\r\n        </AnimatePresence>\r\n        {/* , */}\r\n        {/*    document.body\r\n       )} */}\r\n      </MotionConfig>\r\n    </>\r\n  );\r\n}\r\n",
      "type": "registry:component"
    }
  ]
}