{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "image-reveal2",
  "type": "registry:component",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./registry/components/image-reveal/index.tsx",
      "content": "'use client';\r\n\r\nimport { useMediaQuery } from '@/hooks/use-media-query';\r\nimport { ArrowUpRight, MoveUpRight } from 'lucide-react';\r\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\r\n\r\ninterface ImageData {\r\n  id: number;\r\n  src: string;\r\n  alt: string;\r\n}\r\n\r\nconst images: ImageData[] = [\r\n  {\r\n    id: 1,\r\n    src: 'https://images.unsplash.com/photo-1682806816936-c3ac11f65112?q=80&w=1274&auto=format&fit=crop',\r\n    alt: 'Follow Your Path',\r\n  },\r\n  {\r\n    id: 2,\r\n    src: 'https://images.unsplash.com/photo-1681063762354-d542c03bbfc5?q=80&w=1274&auto=format&fit=crop',\r\n    alt: 'Shine Bright',\r\n  },\r\n  {\r\n    id: 3,\r\n    src: 'https://images.unsplash.com/photo-1679640034489-a6db1f096b70?q=80&w=1274&auto=format&fit=crop',\r\n    alt: 'Create Magic',\r\n  },\r\n  {\r\n    id: 4,\r\n    src: 'https://images.unsplash.com/photo-1679482451632-b2e126da7142?q=80&w=1274&auto=format&fit=crop',\r\n    alt: 'Keep Moving Forward',\r\n  },\r\n];\r\n\r\nconst ImageReveal2: React.FC = () => {\r\n  const isDesktop = useMediaQuery('(min-width: 768px)');\r\n  const [activeImage, setActiveImage] = useState<ImageData | null>(null);\r\n  const [cursorPosition, setCursorPosition] = useState({ x: 0, y: 0 });\r\n  const [opacity, setOpacity] = useState(0);\r\n  const [scale, setScale] = useState(0.5);\r\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n  const requestRef = useRef<number | null>(null);\r\n  const prevCursorPosition = useRef({ x: 0, y: 0 });\r\n\r\n  const handleMouseMove = useCallback((e: MouseEvent) => {\r\n    const { clientX, clientY } = e;\r\n    const dx = clientX - prevCursorPosition.current.x;\r\n    const dy = clientY - prevCursorPosition.current.y;\r\n\r\n    // Apply easing to the cursor movement\r\n    const easeAmount = 0.2;\r\n    const newX = prevCursorPosition.current.x + dx * easeAmount;\r\n    const newY = prevCursorPosition.current.y + dy * easeAmount;\r\n\r\n    setCursorPosition({ x: newX, y: newY });\r\n    prevCursorPosition.current = { x: newX, y: newY };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const updateCursorPosition = (e: MouseEvent) => {\r\n      if (requestRef.current) return;\r\n      requestRef.current = requestAnimationFrame(() => {\r\n        handleMouseMove(e);\r\n        requestRef.current = null;\r\n      });\r\n    };\r\n\r\n    window.addEventListener('mousemove', updateCursorPosition);\r\n    return () => {\r\n      window.removeEventListener('mousemove', updateCursorPosition);\r\n      if (requestRef.current) cancelAnimationFrame(requestRef.current);\r\n    };\r\n  }, [handleMouseMove]);\r\n\r\n  const handleImageHover = useCallback(\r\n    (image: ImageData) => {\r\n      if (activeImage !== image) {\r\n        setActiveImage(image);\r\n        if (timeoutRef.current) clearTimeout(timeoutRef.current);\r\n        timeoutRef.current = setTimeout(() => {\r\n          setOpacity(1);\r\n          setScale(1);\r\n        }, 50);\r\n      } else {\r\n        setOpacity(1);\r\n        setScale(1);\r\n      }\r\n    },\r\n    [activeImage]\r\n  );\r\n\r\n  const handleMouseLeave = useCallback(() => {\r\n    setOpacity(0);\r\n    setScale(0.5);\r\n    if (timeoutRef.current) clearTimeout(timeoutRef.current);\r\n    timeoutRef.current = setTimeout(() => {\r\n      setActiveImage(null);\r\n    }, 300);\r\n  }, []);\r\n\r\n  return (\r\n    <div className='relative w-full' onMouseLeave={handleMouseLeave}>\r\n      {images.map((image) => (\r\n        <div\r\n          key={image.id}\r\n          className={`px-2 cursor-pointer relative sm:flex items-center border-b border-primary justify-between`}\r\n          onMouseEnter={() => handleImageHover(image)}\r\n        >\r\n          {!isDesktop && (\r\n            <img\r\n              src={image?.src}\r\n              className='sm:w-32 sm:h-20 w-full h-52 object-cover rounded-md'\r\n              alt='mobileImg'\r\n            />\r\n          )}\r\n          <h2\r\n            className={`newFont dark:text-gray-300 uppercase md:text-5xl sm:text-2xl text-xl sm:py-6 py-2 leading-[100%] relative ${\r\n              activeImage?.id === image?.id\r\n                ? 'mix-blend-difference z-20 text-gray-300'\r\n                : 'text-gray-700'\r\n            }`}\r\n          >\r\n            {image.alt}\r\n          </h2>\r\n          <button\r\n            className={`sm:block hidden p-2 rounded-full transition-all duration-300 ease-out ${\r\n              activeImage?.id === image?.id\r\n                ? 'mix-blend-difference z-20 bg-white text-black'\r\n                : ''\r\n            }`}\r\n          >\r\n            <ArrowUpRight className='w-8 h-8' />\r\n          </button>\r\n          <div\r\n            className={`w-full dark:bg-white bg-black absolute bottom-0 left-0 transition-all duration-300 ease-linear ${\r\n              activeImage?.id === image?.id ? 'h-full' : 'h-0'\r\n            }`}\r\n          />\r\n        </div>\r\n      ))}\r\n      {isDesktop && activeImage && (\r\n        <img\r\n          src={activeImage.src}\r\n          alt={activeImage.alt}\r\n          className={`fixed dark:bg-gray-950 rotate-12 bg-white object-cover pointer-events-none z-10 w-[300px] h-[400px] rounded-lg`}\r\n          style={{\r\n            left: `${cursorPosition.x}px`,\r\n            top: `${cursorPosition.y}px`,\r\n            transform: `translate(-50%, -50%) scale(${scale})`,\r\n            opacity: opacity,\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageReveal2;\r\n",
      "type": "registry:component"
    }
  ]
}