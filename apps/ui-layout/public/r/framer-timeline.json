{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "framer-timeline",
  "type": "registry:component",
  "dependencies": [
    "motion",
    "@motionone/utils"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./components/ui/framer-timeline.tsx",
      "content": "import { type HTMLMotionProps, motion, useInView } from \"motion/react\"\r\nimport type React from \"react\"\r\nimport type { Variants } from \"motion/react\"\r\n\r\ntype TimelineContentProps<T extends keyof HTMLElementTagNameMap> = {\r\n  children: React.ReactNode\r\n  animationNum: number\r\n  className?: string\r\n  timelineRef: React.RefObject<HTMLElement | null>\r\n  as?: T\r\n  customVariants?: Variants\r\n  once?: boolean\r\n} & HTMLMotionProps<T>\r\n\r\nexport const TimelineContent = <T extends keyof HTMLElementTagNameMap = \"div\">({\r\n  children,\r\n  animationNum,\r\n  timelineRef,\r\n  className,\r\n  as,\r\n  customVariants,\r\n  once=false,\r\n  ...props\r\n}: TimelineContentProps<T>) => {\r\n  const defaultSequenceVariants = {\r\n    visible: (i: number) => ({\r\n      filter: \"blur(0px)\",\r\n      y: 0,\r\n      opacity: 1,\r\n      transition: {\r\n        delay: i * 0.5,\r\n        duration: 0.5,\r\n      },\r\n    }),\r\n    hidden: {\r\n      filter: \"blur(20px)\",\r\n      y: 0,\r\n      opacity: 0,\r\n    },\r\n  }\r\n\r\n  // Use custom variants if provided, otherwise use default\r\n  const sequenceVariants = customVariants || defaultSequenceVariants\r\n\r\n  const isInView = useInView(timelineRef, {\r\n    once\r\n  })\r\n\r\n  const MotionComponent = motion[as || \"div\"] as React.ElementType\r\n\r\n  return (\r\n    <MotionComponent\r\n      initial=\"hidden\"\r\n      animate={isInView ? \"visible\" : \"hidden\"}\r\n      custom={animationNum}\r\n      variants={sequenceVariants}\r\n      className={className}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </MotionComponent>\r\n  )\r\n}\r\n\r\n",
      "type": "registry:component"
    }
  ]
}