{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "image-tabs",
  "type": "registry:component",
  "dependencies": [
    "motion"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./components/ui/image-tabs.tsx",
      "content": "'use client'\nimport React, { ReactNode, useState, createContext, useContext } from 'react'\nimport { AnimatePresence, motion } from 'motion/react'\nimport { cn } from '@/lib/utils'\nimport { useMediaQuery } from '@/hooks/use-media-query'\n\ninterface Tab {\n  id: string\n  title: string\n  description: string\n  imageUrl: string\n}\n\ninterface TabsContextType {\n  activeTab: string\n  setActiveTab: (id: string) => void\n  isDesktop: boolean\n}\n\nconst TabsContext = createContext<TabsContextType | undefined>(undefined)\n\nconst useTabs = () => {\n  const context = useContext(TabsContext)\n  if (!context) {\n    throw new Error('Tabs components must be used within a TabsProvider')\n  }\n  return context\n}\n\nexport function TabsProvider({\n  children,\n  defaultValue,\n  className,\n}: {\n  children: ReactNode\n  defaultValue: string\n  className?: string\n}) {\n  const [activeTab, setActiveTab] = useState(defaultValue)\n  const isDesktop = useMediaQuery('(min-width: 768px)')\n  return (\n    <TabsContext.Provider value={{ activeTab, setActiveTab, isDesktop }}>\n      <div className={cn('w-full h-full', className)}>{children}</div>\n    </TabsContext.Provider>\n  )\n}\n\nexport function TabList({\n  children,\n  className,\n}: {\n  children: ReactNode\n  className?: string\n}) {\n  return <div className={cn('rounded-sm h-fit', className)}>{children}</div>\n}\n\nexport function TabItem({\n  children,\n  value,\n}: {\n  children: ReactNode\n  value: string\n}) {\n  const { activeTab, setActiveTab } = useTabs()\n\n  return (\n    <motion.div\n      className={`rounded-lg overflow-hidden mb-2 md:text-base text-sm ${\n        activeTab === value\n          ? 'active border-2 dark:border-[#656fe2] border-[#F2F2F2] dark:bg-[#E0ECFB] bg-[#F2F2F2]'\n          : 'bg-transparent border-2 dark:hover:border-[#656fe2]'\n      }`}\n      onClick={() => setActiveTab(value)}\n    >\n      {children}\n    </motion.div>\n  )\n}\n\nexport function TabHeader({\n  children,\n  value,\n}: {\n  children: ReactNode\n  value: string\n}) {\n  const { activeTab } = useTabs()\n  return (\n    <h3\n      className={`p-4 md:text-base text-sm cursor-pointer transition-all font-semibold dark:text-white text-black dark:hover:bg-[#1e2a78] hover:bg-[#F2F2F2] dark:hover:text-white hover:text-black flex justify-between items-center ${\n        activeTab === value\n          ? 'active dark:bg-[#1e2a78] bg-[#F2F2F2]'\n          : 'dark:bg-[#11112b] bg-white'\n      }`}\n    >\n      {children}\n    </h3>\n  )\n}\n\nexport function TabDes({\n  children,\n  value,\n}: {\n  children: ReactNode\n  value: string\n}) {\n  const { activeTab } = useTabs()\n  return (\n    <AnimatePresence mode=\"sync\">\n      {activeTab === value && (\n        <motion.div\n          initial={{ height: 0, opacity: 0 }}\n          animate={{ height: 'auto', opacity: 1 }}\n          exit={{ height: 0, opacity: 0 }}\n          transition={{\n            duration: 0.3,\n            ease: 'easeInOut',\n            delay: 0.14,\n          }}\n        >\n          {children}\n        </motion.div>\n      )}\n    </AnimatePresence>\n  )\n}\n\nexport function TabImageContainer({\n  children,\n  className,\n}: {\n  children: ReactNode\n  className?: string\n}) {\n  return (\n    <div className={cn('', className)}>\n      <AnimatePresence mode=\"popLayout\">{children}</AnimatePresence>\n    </div>\n  )\n}\n\nexport function TabImage({\n  children,\n  value,\n}: {\n  children: ReactNode\n  value: string\n}) {\n  const { activeTab, isDesktop } = useTabs()\n\n  if (activeTab !== value || !isDesktop) return null\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, overflow: 'hidden' }}\n      animate={{ opacity: 1, overflow: 'hidden' }}\n      exit={{ opacity: 0, overflow: 'hidden' }}\n      transition={{\n        duration: 0.4,\n        delay: 0.2,\n      }}\n      className=\"p-4 h-[400px] rounded-md overflow-hidden\"\n    >\n      {children}\n    </motion.div>\n  )\n}\n",
      "type": "registry:component"
    }
  ]
}