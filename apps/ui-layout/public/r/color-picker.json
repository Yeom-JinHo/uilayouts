{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "color-picker",
  "type": "registry:component",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "./components/ui/color-picker.tsx",
      "content": "\"use client\";\r\n\r\nimport { Button } from \"@/components/website/ui/button\";\r\nimport { Input } from \"@/components/website/ui/input\";\r\nimport { Label } from \"@/components/website/ui/label\";\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/components/website/ui/popover\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Copy, Pipette } from \"lucide-react\";\r\nimport { HexColorPicker } from \"react-colorful\";\r\nimport { toast } from \"sonner\";\r\n\r\ninterface ColorPickerProps {\r\n  color: string\r\n  onChange: (color: string) => void\r\n  label: string\r\n  isEyeDroppper?:boolean\r\n  className?:string\r\n}\r\n\r\nexport function ColorPicker({\r\n  color,\r\n  onChange,\r\n  label,\r\n  isEyeDroppper = false,\r\n  className,\r\n}: ColorPickerProps) {\r\n  function copyToClipboard() {\r\n    navigator.clipboard.writeText(color);\r\n    toast(\"Copied!\", {\r\n      description: `${color} copied to clipboard`,\r\n      duration: 2000,\r\n    });\r\n  }\r\n\r\n  async function useEyeDropper() {\r\n    if (!(\"EyeDropper\" in window)) {\r\n      toast.error(\"Not supported\", {\r\n        description: \"Eyedropper is not supported in your browser\",\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // @ts-expect-error - EyeDropper is not in the TypeScript DOM types yet\r\n      const eyeDropper = new window.EyeDropper();\r\n      const result = await eyeDropper.open();\r\n      onChange(result.sRGBHex);\r\n    } catch (e) {\r\n      console.error(\"Error using eyedropper\", e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={cn(\"flex items-center gap-2\",className)}>\r\n      <Label className=\"w-24\">{label}</Label>\r\n      <Popover>\r\n        <PopoverTrigger asChild>\r\n          <Button\r\n            variant=\"outline-solid\"\r\n            className=\"h-8 w-12 border-2 p-0\"\r\n            style={{ backgroundColor: color }}\r\n          >\r\n            <span className=\"sr-only\">Pick a color</span>\r\n          </Button>\r\n        </PopoverTrigger>\r\n        <PopoverContent className=\"w-full p-3 bg-primary-foreground\">\r\n          <HexColorPicker\r\n            color={color}\r\n            onChange={onChange}\r\n            className=\"w-full!\"\r\n          />\r\n          <div className=\"mt-2 flex w-full gap-2\">\r\n            <Input\r\n              value={color}\r\n              onChange={(e) => onChange(e.target.value)}\r\n              className=\"h-10 w-full\"\r\n            />\r\n            <Button\r\n              variant=\"outline-solid\"\r\n              size=\"icon\"\r\n              onClick={copyToClipboard}\r\n              className=\"h-10 w-12 shrink border-gray-300 bg-gray-100 text-gray-900 hover:bg-gray-200\"\r\n              style={{ borderRadius: \"6px\" }}\r\n            >\r\n              <Copy className=\"h-4 w-4\" />\r\n              <span className=\"sr-only\">Copy color</span>\r\n            </Button>\r\n          </div>\r\n\r\n          {isEyeDroppper && (\r\n            <div className=\"mt-2 flex gap-2\">\r\n              <Button\r\n                variant=\"outline-solid\"\r\n                size=\"icon\"\r\n                onClick={useEyeDropper}\r\n                className=\"h-10 w-10 border-gray-300 bg-gray-100 text-gray-900 hover:bg-gray-200\"\r\n                style={{ borderRadius: \"6px\" }}\r\n              >\r\n                <Pipette className=\"h-4 w-4\" />\r\n                <span className=\"sr-only\">Pick color</span>\r\n              </Button>\r\n\r\n              <div\r\n                className=\"h-10 flex-1\"\r\n                style={{ backgroundColor: color, borderRadius: \"6px\" }}\r\n              />\r\n            </div>\r\n          )}\r\n        </PopoverContent>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:component"
    }
  ]
}